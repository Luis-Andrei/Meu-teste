name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [auth-service, ecommerce-service, bank-service, api-gateway]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      if: matrix.service == 'auth-service' || matrix.service == 'api-gateway'
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Set up Python
      if: matrix.service == 'ecommerce-service'
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
        cache: 'pip'

    - name: Set up Go
      if: matrix.service == 'bank-service'
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache: true

    - name: Install dependencies
      if: matrix.service == 'auth-service' || matrix.service == 'api-gateway'
      run: |
        cd ${{ matrix.service }}
        npm ci

    - name: Install Python dependencies
      if: matrix.service == 'ecommerce-service'
      run: |
        cd ${{ matrix.service }}
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install Go dependencies
      if: matrix.service == 'bank-service'
      run: |
        cd ${{ matrix.service }}
        go mod download

    - name: Run tests
      if: matrix.service == 'auth-service' || matrix.service == 'api-gateway'
      run: |
        cd ${{ matrix.service }}
        npm test

    - name: Run Python tests
      if: matrix.service == 'ecommerce-service'
      run: |
        cd ${{ matrix.service }}
        python -m pytest

    - name: Run Go tests
      if: matrix.service == 'bank-service'
      run: |
        cd ${{ matrix.service }}
        go test -v ./...

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker images
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/auth-service:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/ecommerce-service:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/bank-service:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/api-gateway:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Deploy to production
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd /opt/projetos-integrados
          docker-compose pull
          docker-compose up -d 