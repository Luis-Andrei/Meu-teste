name: Testes Automatizados, Deploy e Performance

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: 🔍 Rodar testes
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: yourpassword
          POSTGRES_DB: bankdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: 📥 Clonar repositório
        uses: actions/checkout@v4

      - name: ⚙️ Instalar Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21

      - name: 📦 Instalar dependências
        run: go mod tidy

      - name: 🧪 Rodar testes com cobertura
        env:
          DB_USER: postgres
          DB_PASS: yourpassword
          DB_NAME: bankdb
          DB_HOST: localhost
        run: |
          go test ./handlers -v -coverprofile=coverage.out

      - name: ☁️ Upload para Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.out
          flags: unittests
          name: codecov-coverage

      - name: 🧪 Testes de Integração
        run: |
          curl -X GET http://localhost:8080/accounts/1
          curl -X POST http://localhost:8080/accounts/1/deposit -d '{"amount": 200}'

  deploy:
    name: 🚀 Deploy
    needs: test
    runs-on: ubuntu-latest
    if: success()  # Só executa se os testes passarem

    steps:
      - name: 📥 Clonar repositório
        uses: actions/checkout@v4

      - name: ⚙️ Instalar Vercel CLI
        run: npm install -g vercel

      - name: 🔑 Configurar Vercel Token
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: vercel login --token $VERCEL_TOKEN

      - name: 🚢 Criar Docker Image
        run: |
          docker build -t bank-server .
          docker tag bank-server luis-andrei/bank-server:latest
          docker push luis-andrei/bank-server:latest

      - name: 🚀 Deploy para Vercel
        run: vercel --prod --token ${{ secrets.VERCEL_TOKEN }} --scope luis-andrei

  notify_failure:
    name: ⚠️ Notificar falha
    if: failure()  # Só executa se o job 'deploy' falhar
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Clonar repositório
        uses: actions/checkout@v4

      - name: 🚨 Enviar alerta de falha para Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"🚨 O Deploy para Vercel falhou! Por favor, verifique!"}' $SLACK_WEBHOOK_URL

      - name: 🚨 Enviar alerta de falha para Discord
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{"content": "🚨 O Deploy para Vercel falhou! Verifique os logs!"}' $DISCORD_WEBHOOK_URL

  performance:
    name: 🏋️ Testes de Performance
    needs: test
    runs-on: ubuntu-latest
    if: success()

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: yourpassword
          POSTGRES_DB: bankdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: 📥 Clonar repositório
        uses: actions/checkout@v4

      - name: ⚙️ Instalar Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21

      - name: 📦 Instalar dependências
        run: go mod tidy

      - name: 🏃‍♂️ Iniciar servidor em background
        env:
          DB_USER: postgres
          DB_PASS: yourpassword
          DB_NAME: bankdb
          DB_HOST: localhost
        run: |
          go run main.go &
          sleep 5  # Espera o servidor iniciar

      - name: ⚙️ Instalar k6
        run: |
          sudo apt-get update
          sudo apt-get install -y k6

      - name: 🚀 Rodar Teste de Performance com k6
        run: |
          k6 run tests/performance.js 